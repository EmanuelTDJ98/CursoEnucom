#Configuracion para el servicio API Gateway
server.port=8000
spring.application.name=API-Gateway

#Configuracion de EUREKA Client
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.hostname=localhost
eureka.client.service-url.defaultZone=http://localhost:9000/eureka

#*****************************************************************
#SEGURIDAD CON "SPRRING SECURITY"
# USUARIO
spring.security.user.name=emanuel
spring.security.user.password=123456
#ROL
spring.security.user.roles=ADMIN
#*****************************************************************

#Configuracion de los microservicios que controla la API-GATEWAY
# Microservicio CLIENTES
# http://localhost:8012/Clientes
spring.cloud.gateway.mvc.routes[0].id=CLIENTES
spring.cloud.gateway.mvc.routes[0].uri=http://localhost:8012
spring.cloud.gateway.mvc.routes[0].predicates[0]=Path=/Clientes/**

# Microservicio PRODUCTOS
# http://localhost:8010/Productos
spring.cloud.gateway.mvc.routes[1].id=PRODUCTOS
spring.cloud.gateway.mvc.routes[1].uri=http://localhost:8010
spring.cloud.gateway.mvc.routes[1].predicates[0]=Path=/Clientes/**

# Microservicio PROVEEDORES
# http://localhost:8020/Proveedores
spring.cloud.gateway.mvc.routes[2].id=PROVEDORES
spring.cloud.gateway.mvc.routes[2].uri=http://localhost:8020
spring.cloud.gateway.mvc.routes[2].predicates[0]=Path=/Proveedores/**

# Microservicio GESTION-TIENDA
# http://localhost:8014/Tienda
spring.cloud.gateway.mvc.routes[3].id=GESTION-TIENDA
spring.cloud.gateway.mvc.routes[3].uri=http://localhost:8014
spring.cloud.gateway.mvc.routes[3].predicates[0]=Path=/Tienda/**

# Ajustar tiempos de heartbeat para evitar problemas de registro
eureka.instance.lease-renewal-interval-in-seconds=10
eureka.instance.lease-expiration-duration-in-seconds=30